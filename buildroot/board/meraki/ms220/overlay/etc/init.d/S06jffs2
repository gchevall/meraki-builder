#!/bin/sh
#
# Mount/create JFFS2; bind mount /etc from /overlay/etc
#

overlay_dirs() {
    overlay_dirs="upperdir workdir"
    for dir in overlay_dirs; do
        to_create=$(grep -E "^overlay" /etc/fstab | awk '{print $4}' | grep -Eo "${dir}=.*" | awk -F',' '{print $1}' | awk -F'=' '{print $2}')
        if [ ! -d $to_create ]; then mkdir -p $to_create; done
    done
}

mount_jffs2() {
    if [ $(grep -c "/overlay" /proc/mounts) -eq 0 ]; then
        # handle the mtdblock number changing
        MTD_NUM=$(grep \"overlay\" /proc/mtd | awk -F':' '{print $1}' | grep -Eo '[0-9]{1,2}')
        mount -t jffs2 -o rw,noatime /dev/mtdblock${MTD_NUM} /overlay
        if [ $? -eq 0 ]; then
            # successfully mounted /overlay
            # ensure everything specified in /etc/fstab is created; this should be covered
            # by the below JFFS2 formatting, but just be safe
            overlay_dirs
            # mount everything
            mount -a
            echo "Mounted /overlay"
        else
            # format /overlay; COULD BE DANGEROUS!
            echo "First boot, formatting /overlay"
            SIZE=$((0x$(grep \"overlay\" /proc/mtd | awk '{print $2}')))
            TMPDIR=$(mktemp -d)
            dirs="work upper"
            overlays=$(grep -E "^overlay" fstab | awk '{print $4}' | awk -F'/' '{print $NF}')
            for dir in $dirs; do
                for overlay in $overlays; do
                    mkdir -p ${TMPDIR}/.${dir}/${overlay}
                done
            done
            # suppress error output
            #mkfs.jffs2 -o /dev/mtdblock${MTD_NUM} -l -n -r ${TMPDIR}/ 2>/dev/null
            mkfs.jffs2 -p $SIZE -l -n -X lzo -x zlib -y 40:lzo -r ${TMPDIR}/ | dd of=/dev/mtdblock${MTD_NUM} bs=65536
            rm -rf $TMPDIR
            mount -t jffs2 -o rw,noatime /dev/mtdblock${MTD_NUM} /overlay
        fi
    else
        echo "/overlay is already mounted"
    fi
}

start() {
    mount_jffs2
}

stop() {
    umount /overlay
}

restart() {
    stop
    start
}

case "$1" in
  start)
      start
    ;;
  stop)
      stop
    ;;
  restart|reload)
      restart
    ;;
  *)
    echo "Usage: $0 {start|stop|restart}"
    exit 1
esac

exit $?
