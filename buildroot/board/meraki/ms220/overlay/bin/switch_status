#!/bin/sh
#
# Copyright (C) 2020 - Hal Martin (github.com/halmartin)
#
# This is a simple script to print the switch status (physical, link, vlan, poe) as JSON

# source jshn shell library https://openwrt.org/docs/guide-developer/jshn
. /usr/share/libubox/jshn.sh

CSPT=/click/switch_port_table
POE=0
MODEL="unknown"

if [ -f /etc/boardinfo ]; then
  . /etc/boardinfo
  if [ $(echo $MODEL | grep -c -E 'P$') -eq 1 ]; then
    POE=1
    port_poe_statuses=$(pd690xx -l)
  fi
fi

# convert 0/non-0 to false/true
to_bool() {
  if [ $(echo $port_status | awk "{print \$$1}") -ne 0 ]; then
    echo true
  else
    echo false
  fi
}

json_init
json_add_string device $MODEL
json_add_string date $(date +%Y-%m-%dT%TZ)

if [ -f ${CSPT}/dump_pport_vlans ] && [ -f ${CSPT}/dump_pports ]; then
  port_statuses=$(cat ${CSPT}/dump_pports)
  port_vlan_statuses=$(cat $CSPT/dump_pport_vlans)

  if [ $POE -eq 1 ]; then
    # on larger switches there are multiple pd690xx, only take the first temp
    json_add_string temperature $(pd690xx -t | head -1)
  fi

  json_add_object ports
  for port in $(seq 1 $(echo "$port_statuses" | tail -n+2 | wc -l)); do
    port_status=$(echo "$port_statuses" | grep -E "^\s+$port\s")
    port_vlan_status=$(echo "$port_vlan_statuses" | grep -E "^\s+$port\s")

    json_add_object $port
    json_add_string enabled $(to_bool 10)
    json_add_string lacp $(to_bool 6)

    json_add_object link
    json_add_string established $(to_bool 2)
    json_add_string speed $(echo $port_status | awk '{print $3}')
    json_close_object # link

    json_add_object vlan
    json_add_string pvid $(echo $port_vlan_status | awk '{print $6}')
    json_add_string allowed $(echo $port_vlan_status | awk '{print $11}')
    json_add_string tag_in $(echo $port_vlan_status | awk '{print $2}')
    json_add_string untag_in $(echo $port_vlan_status | awk '{print $3}')
    json_close_object # vlan

    if [ $POE -eq 1 ]; then
      port_poe_status=$(echo "$port_poe_statuses" | grep -E "^$port\s")
      # parse PoE status
      if [ "$(echo $port_poe_status | awk '{print $2}')" == "Enabled" ]; then
        poe_state=true
      else
        poe_state=false
      fi

      json_add_object poe
      json_add_string enabled $poe_state
      json_add_string standard 802.3$(echo $port_poe_status | awk '{print $3}')
      json_add_string power $(echo $port_poe_status | awk '{print $5}')
      json_close_object # poe
    fi

    json_close_object # port
  done
fi

json_dump
